import streamlit as st
from langchain_openai import ChatOpenAI
import os

os.environ["OPENAI_API_KEY"] = st.secrets["OPENAI_API_KEY"]

# Title and description
st.title("Kadhai Paeyar Gen")
st.markdown("Genrate a short name for the родрооро┐ро┤рпН story passed") 
st.markdown("The prompt is automatically prepended the following: роХрпАро┤рпЗ роХрпКроЯрпБроХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│ роХродрпИроХрпНроХрпБрокрпН рокрпКро░рпБродрпНродрооро╛рой родро▓рпИрокрпНрокрпИроХрпН роХрпКроЯрпБ. роХродрпИ: <Kathai>")

# Text input for topic
topic = st.text_input("Please enter the Kathai")

st.code("""
            Try:
            2050ро▓рпН, роЗройро┐ропро╛ роТро░рпБ aerospace engineer роЖроХро┐ роиро┐ро▓ро╛ро╡ро┐ро▓рпН рооройро┐родро░рпИ роЕройрпБрокрпНрок роХройро╡рпБ роХро╛рогрпНроХро┐ро▒ро╛ро│рпН. роЖройро╛ро▓рпН, project роиро┐родро┐ропро┐ройрпНро▒ро┐ роорпБроЯроЩрпНроХрпБроХро┐ро▒родрпБ.
            роЕро╡ро│ро┐ройрпН роЕрогрпНрогройрпН роЖройроирпНродрпН, AI роорпВро▓роорпН роЙродро╡ро┐ роЪрпЖропрпНродрпБ NASAропро┐ройрпН роЖродро░ро╡рпИ рокрпЖро▒рпБроХро┐ро▒ро╛ро░рпН.
            роЗро▒рпБродро┐ропро┐ро▓рпН, роЗройро┐ропро╛ро╡ро┐ройрпН spacecraft роиро┐ро▓ро╛ро╡рпИ роЪрпЖройрпНро▒роЯрпИроирпНродрпБ, роЕро╡ро│рпН ро╡рпЖро▒рпНро▒ро┐ рокрпЖро▒рпБроХро┐ро▒ро╛ро░рпН.
            роЕро╡ро│рпН роирпЖроХро┐ро┤рпНроирпНродрпБ, "роЗроирпНрод ро╡рпЖро▒рпНро▒ро┐ роЙройрпНройрпБроЯрпИропродрпБ, роЕрогрпНрогро╛!" роОройрпНро▒рпБ роХрпВро▒, роЖройроирпНродрпН роороХро┐ро┤рпНроЪрпНроЪро┐ роЕроЯрпИроХро┐ро▒ро╛ройрпН.
        """, language= None)

# Initialize the models
base_model = ChatOpenAI(model="gpt-4o-mini")
ft_model = ChatOpenAI(model="ft:gpt-4o-mini-2024-07-18:freelancer:ama-ft:AzIdNxDF")

def generate_story_name(prompt, base_model=base_model, ft_model=ft_model):
    response1 = base_model.invoke(prompt)
    response2 = ft_model.invoke(prompt)
    return response1.content, response2.content

if st.button("Story Name"):
    if topic:
        with st.spinner("Thinking for an Approriate Name..."):
            base_response, ft_response = generate_story_name(f"роХрпАро┤рпЗ роХрпКроЯрпБроХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│ роХродрпИроХрпНроХрпБрокрпН рокрпКро░рпБродрпНродрооро╛рой родро▓рпИрокрпНрокрпИроХрпН роХрпКроЯрпБ. роХродрпИ: {topic}")
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.subheader("Base Model (gpt-4o-mini) ЁЯФЧ")
            st.markdown(f'<div class="output-text">{base_response}</div>', unsafe_allow_html=True)
        
        with col2:
            st.subheader("Kathai Gen Model (Fine-tuned Model)")
            st.markdown(f'<div class="output-text">{ft_response}</div>', unsafe_allow_html=True)
    else:
        st.warning("Please enter a Story in родрооро┐ро┤рпН to generate a name")

